diff --git a/src/Need/mcfmmain.f b/src/Need/mcfmmain.f
index 249fa2b..1999227 100755
--- a/src/Need/mcfmmain.f
+++ b/src/Need/mcfmmain.f
@@ -51,24 +51,20 @@
 *   dryrun = .true. , readin = .false. : accumulate during warmup
 *   dryrun = .true. , readin = .true.  : accumulate with frozen grid
 
-      if ((dryrun .eqv. .false.) .or. 
-     .    ((dryrun) .and. (readin .eqv. .false.))) then
+      njetzero=0
+      ncutzero=0
+      ntotzero=0
+      ntotshot=0
+      if (readin .eqv. .false.) then
 * Initialize efficiency variables      
-        njetzero=0
-        ncutzero=0
-        ntotzero=0
-        ntotshot=0
         call mcfm_vegas(0,itmx1,ncall1,dryrun,integ,integ_err)
         itmxplots=itmx1
-      endif
 * This is the mcfm_vegas(accum) call
 * This takes place only if dryrun is false
 * The Vegas parameters are those read from options.DAT for
 * the results stage (itmx2,ncall2) and binning takes place (.true.)
 * wtmax may have been set during the dry run, so re-set here :
-      wtmax = 0d0
-      if ((dryrun .eqv. .false.) .or. 
-     .    ((dryrun) .and. (readin .eqv. .true.))) then
+        wtmax = 0d0
 * Initialize efficiency variables      
         njetzero=0
         ncutzero=0
@@ -76,6 +72,15 @@
         ntotshot=0
         call mcfm_vegas(1,itmx2,ncall2,.true.,integ,integ_err)
         itmxplots=itmx2
+        open(unit=50, file="CSmax.bin", form="unformatted",
+     &    status="replace")
+        write(50) wtmax, integ, integ_err
+        close(unit=50)
+      else
+        open(unit=50, file="CSmax.bin", form="unformatted",
+     &    status="old")
+        read(50) wtmax, integ, integ_err
+        close(unit=50)
       endif
       
 * So far we have not used VEGAS to generate any events.
