--- MG5_aMC_v2_5_5/madgraph/various/cluster.py	2017-06-14 11:36:50.000000001 +0200
+++ /data/kelong/MG5_aMC_v2_5_5/DYToEE_NLO_test/bin/internal/cluster.py	2017-06-14 11:09:57.444010104 +0200
@@ -998,15 +998,21 @@
     @multiple_try(nb_try=10, sleep=10)
     def control_one_job(self, id):
         """ control the status of a single job with it's cluster id """
-        cmd = 'condor_q '+str(id)+" -format \'%-2s \\n\' \'ifThenElse(JobStatus==0,\"U\",ifThenElse(JobStatus==1,\"I\",ifThenElse(JobStatus==2,\"R\",ifThenElse(JobStatus==3,\"X\",ifThenElse(JobStatus==4,\"C\",ifThenElse(JobStatus==5,\"H\",ifThenElse(JobStatus==6,\"E\",string(JobStatus))))))))\'"
+        cmd = 'condor_q '+str(id)+ " -af JobStatus" 
         status = misc.Popen([cmd], shell=True, stdout=subprocess.PIPE, 
                                                          stderr=subprocess.PIPE)
         
         error = status.stderr.read()
-        if status.returncode or error:
-            raise ClusterManagmentError, 'condor_q returns error: %s' % error
-
-        return status.stdout.readline().strip()
+        if output == '1':
+            return "I"
+        elif output == '2':
+            return "R"
+        elif output == '4':
+            return "F"
+        elif output == '5':
+            hold_reason = subprocess.check_output(["condor_q", str(id),"-af", "HoldReason"])
+            logger.info("ClusterId %i held with HoldReason %s" % (str(id), hold_reason))
+        return output
     
     @check_interupt()
     @multiple_try(nb_try=10, sleep=10)
@@ -1022,9 +1028,7 @@
         for i in range(1+(len(self.submitted_ids)-1)//packet):
             start = i * packet
             stop = (i+1) * packet
-            cmd = "condor_q " + ' '.join(self.submitted_ids[start:stop]) + \
-            " -format \'%-2s\  ' \'ClusterId\' " + \
-            " -format \'%-2s \\n\' \'ifThenElse(JobStatus==0,\"U\",ifThenElse(JobStatus==1,\"I\",ifThenElse(JobStatus==2,\"R\",ifThenElse(JobStatus==3,\"X\",ifThenElse(JobStatus==4,\"C\",ifThenElse(JobStatus==5,\"H\",ifThenElse(JobStatus==6,\"E\",string(JobStatus))))))))\'"
+            cmd = "condor_q " + ' '.join(self.submitted_ids[start:stop]) + " -af ClusterId JobStatus"
             
             status = misc.Popen([cmd], shell=True, stdout=subprocess.PIPE, 
                                                              stderr=subprocess.PIPE)
@@ -1035,12 +1039,17 @@
             for line in status.stdout:
                 id, status = line.strip().split()
                 ongoing.append(int(id))
-                if status in ['I','U']:
+                if status in ['0','1']:
                     idle += 1
-                elif status == 'R':
+                elif status == '2':
                     run += 1
-                elif status != 'C':
+                elif status != '4':
                     fail += 1
+                    if status == '5':
+                        hold_reason = subprocess.check_output(["condor_q", str(id),"-af", "HoldReason"])
+                        logger.info("ClusterId %i held with HoldReason %s" % (str(id), hold_reason))
+                        print "ClusterId %i held with HoldReason %s" % (str(id), hold_reason)
+                        
 
         for id in list(self.submitted_ids):
             if int(id) not in ongoing:
